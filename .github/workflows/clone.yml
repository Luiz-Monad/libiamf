name: Sync and Normalize Upstream

on:
  schedule:
    - cron: "0 3 * * *"  # Run daily at 03:00 UTC

  # push:
  #   branches:
  #     - master

  workflow_dispatch:
    inputs:
      debug:
        description: 'Run with debug'
        required: false
        default: 'false'
        type: boolean
      test_rev:
        description: 'Upstream commit SHA to test (optional)'
        required: false
        default: ''

env:
  UPSTREAM_REPO: https://github.com/AOMediaCodec/libiamf.git
  UPSTREAM_BRANCH: main
  ORIGIN_REPO: git@github.com:${{ github.repository }}.git
  ORIGIN_BRANCH: master
  PYTHONUNBUFFERED: 1
  TEST_REV: ${{ github.event.inputs.test_rev }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout target repository
        run: |
          git clone $ORIGIN_REPO target --branch $ORIGIN_BRANCH

      - name: Debug
        if: github.event.inputs.debug == 'true'
        run: |
          sudo -E ./target/.github/debug.sh
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
          NGROK_SSH_PUBKEY: ${{ secrets.NGROK_SSH_PUBKEY }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Clone upstream mirror
        run: |
          git clone $UPSTREAM_REPO source
          cd source
          git fetch --all --tags
          if [ -n "${TEST_REV:-}" ]; then
            echo "Test mode: resetting mirror to specific revision $TEST_REV"
            git checkout $TEST_REV
          fi
          echo "Upstream head: $(git rev-parse HEAD)"
          cd ..

      - name: Debug
        if: github.event.inputs.debug == 'true'
        run: |
          exec -a debug-wait sleep infinity

      - name: Replay commits from upstream
        run: |
          python3 ./target/.github/workflows/replay.py

      - name: Push normalized updates
        if: github.event.inputs.dry_run != 'true'
        run: |
          cd target
          git push origin $ORIGIN_BRANCH
